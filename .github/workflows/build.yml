name: Build

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: windows-latest

    env:
      DOTNET_INSTALL_DIR: '.\.dotnet'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Cache dotnet
      id: cache-dotnet
      uses: actions/cache@v3
      with:
        path: ${{ env.DOTNET_INSTALL_DIR }}
        key: ${{ runner.os }}-dotnet-8
        restore-keys: ${{ runner.os }}-dotnet-8

    - name: Setup dotnet
      if: ${{ steps.cache-dotnet.outputs.cache-hit != 'true' }}
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 8.0.x

    - name: Setup dotnet-script
      run: ${{ env.DOTNET_INSTALL_DIR }}\dotnet tool install -g dotnet-script

    - name: Cache Torchlight
      id: cache-torchlight
      uses: actions/cache@v3
      with:
        path: ./node_modules/@torchlight-api
        key: ${{ runner.os }}-torchlight-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-torchlight-

    - name: Setup node
      uses: actions/setup-node@v2

    - name: Setup torchlight
      if: ${{ steps.cache-torchlight.outputs.cache-hit != 'true' }}
      run: npm i @torchlight-api/torchlight-cli

    - name: Set dotnet path
      run: echo "${{ env.DOTNET_INSTALL_DIR }}" | Out-File -FilePath $ENV:GITHUB_PATH -Encoding utf8 -Append

    - name: Build
      run: ${{ env.DOTNET_INSTALL_DIR }}\dotnet script build.csx

    - name: Highlight
      env:
        TORCHLIGHT_TOKEN: ${{ secrets.TORCHLIGHT_TOKEN }}
      run: npx torchlight

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./output
